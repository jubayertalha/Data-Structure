#include<iostream>using namespace std;struct Data{   int id;   string name;   double cgpa;};struct Node{   Node *l, *r;   Data data;}*r = NULL, *p = NULL, *np = NULL, *q;void insertData(Data v){    if(r == NULL){        r = new Node;        r->data = v;        r->r = NULL;        r->l = NULL;      }else{        p = r;        while(true){            if(v.id < p->data.id){               if(p->l == NULL){                  p->l = new Node;                  p = p->l;                  p->data = v;                  p->l = NULL;                  p->r = NULL;                  break;               }else if(p->l != NULL){                  p = p->l;               }            }else if(v.id >p->data.id){               if(p->r == NULL){                  p->r = new Node;                  p = p->r;                  p->data = v;                  p->l = NULL;                  p->r = NULL;                  break;               }else if (p->r != NULL){                  p = p->r;               }            }        }    }}void inorder(Node *p) {   if(p != NULL){      inorder(p->l);      cout<<p->data.id<<endl;      inorder(p->r);   }}void preorder(Node *p) {   if(p != NULL){      cout<<p->data.id<<endl;      preorder(p->l);      preorder(p->r);   }}void postorder(Node *p){   if(p != NULL){      postorder(p->l);      postorder(p->r);      cout<<p->data.id<<endl;   }}int searchMin(Node *p){    Node* current = p;    while(current->l != NULL){        current = current->l;    }    return (current->data.id);}int searchMax(Node *p){    Node* current = p;    while (current->r != NULL)  {        current = current->r;    }    return (current->data.id);}int main() {    cout<<"Enter student data(enter student id -1 to end): "<<endl;    Data data;    int id = 0;    string name;    double cgpa;    while(id!=-1){        cout<<"\nEnter Student Id: ";        cin>>id;        if(id!=-1){            cout<<"Enter Student Name: ";            cin.ignore();            getline(cin, name);            cout<<"Enter Student CGPA: ";            cin>>cgpa;            data.id = id;            data.name = name;            data.cgpa = cgpa;            insertData(data);            cout<<endl;        }    }    cout<<"\n\nMost Junior Student: ";    cout<<searchMax(r);    cout<<"\n\nMost Senior Student: ";    cout<<searchMin(r);    cout<<endl;    return 0;}